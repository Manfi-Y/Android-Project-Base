apply plugin: 'com.android.library'
apply plugin: 'android-apt'
apply plugin: 'com.github.dcendents.android-maven'
apply plugin: 'com.jfrog.bintray'

def AAVersion = '4.1.0'

// compile '[group]:base_app_libs:[version]'
version = '1.0.1' // 上传时候bintray会用'version'这个值作为版本号
group = 'cn.manfi'    // 上传时候bintray会用'group'这个值作为组名

android {
    compileSdkVersion 25
    buildToolsVersion '25.0.2'
    publishNonDefault true

    defaultConfig {
        minSdkVersion 15
        targetSdkVersion 25
        versionCode 6
        versionName version
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            zipAlignEnabled false
            debuggable false
        }
        debug {
            zipAlignEnabled false
            debuggable true
        }
    }

    lintOptions {
        abortOnError false
    }

    publishNonDefault true
    defaultPublishConfig "debug"
}
dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    // HTTP网络请求库（基于HTTPClient）
    compile 'com.loopj.android:android-async-http:1.4.9'
    // JSON解析工具
    compile 'com.alibaba:fastjson:1.2.7'
    /*
    第三方Dialog
    com.android.support:support-v13
    compile 'com.android.support:appcompat-v7
    compile 'com.android.support:recyclerview-v7
    compile 'com.android.support:support-annotations
    compile 'me.zhanghai.android.materialprogressbar:library
     */
    compile 'com.afollestad.material-dialogs:core:0.9.4.2'
    // 加载更多Adapter
    compile 'com.othershe:BaseAdapter:1.0.4'
    // 依赖注入框
    apt "org.androidannotations:androidannotations:$AAVersion"
    compile "org.androidannotations:androidannotations-api:$AAVersion"
}

apt {
    arguments {
        androidManifestFile variant.outputs[0]?.processResources?.manifestFile
        resourcePackageName 'cn.tianqu.libs.app'
        library "true"
        // if you have multiple outputs (when using splits), you may want to have other index than 0

        // you should set your package name here if you are using different application IDs
        // resourcePackageName "your.package.name"

        // You can set optional annotation processing options here, like these commented options:
        // logLevel 'INFO'
        // logFile '/var/log/aa.log'
    }
}

def siteUrl = 'https://git.oschina.net/manfi/Android-Project-Base'    // 项目主页
def gitUrl = 'https://git.oschina.net/manfi/Android-Project-Base.git' // 项目的git地址
def module_name = 'Android-Project-Base'    // 项目的名称

install {
    repositories.mavenInstaller {
        // This generates POM.xml with proper parameters
        pom {
            project {
                packaging 'aar'
                name module_name // 名称
                url siteUrl
                licenses {
                    license {
                        name 'GNU General Public License version 3' // 开源协议名称
                        url 'https://opensource.org/licenses/gpl-3.0.html' // 协议地址
                    }
                }
                developers {
                    developer {
                        id 'manfi'    // 账号
                        name 'manfi'    // 名称
                        email 'manfi.yeung@gmail.com' // 邮箱地址
                    }
                }
                scm {
                    connection gitUrl
                    developerConnection gitUrl
                    url siteUrl
                }
            }
        }
    }
}

task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier = 'sources'
}
task javadoc(type: Javadoc) {
    source = android.sourceSets.main.java.srcDirs
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
}
task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}
artifacts {
    archives sourcesJar
}

Properties properties = new Properties()
properties.load(project.rootProject.file('local.properties').newDataInputStream())
bintray {
    // 读取配置文件中的用户名和key
    user = properties.getProperty("bintray.user")
    key = properties.getProperty("bintray.apikey")
    configurations = ['archives']
    pkg {
        repo = "Maven"        // 你在bintray上创建的库的名称
        name = module_name               // 在jcenter中的项目名称
        websiteUrl = siteUrl
        vcsUrl = gitUrl
        licenses = ["GPL-3.0"]
        publish = true
    }
}